version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: goodform-postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-goodform}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_DB: ${DB_NAME:-goodform}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - goodform-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-goodform}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # GoodForm Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: goodform-app
    restart: always
    environment:
      NODE_ENV: production
      DEPLOYMENT_MODE: self-hosted
      DATABASE_URL: postgres://${DB_USER:-goodform}:${DB_PASSWORD:-changeme}@db:5432/${DB_NAME:-goodform}
      SESSION_SECRET: ${SESSION_SECRET:-change-this-secret-in-production}
      PORT: 5000
    ports:
      - "${APP_PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - goodform-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/setup/status', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres-data:
    driver: local

networks:
  goodform-network:
    driver: bridge
